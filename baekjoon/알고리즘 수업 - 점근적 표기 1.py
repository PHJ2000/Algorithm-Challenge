"""
사이트: 백준
문제 이름: [알고리즘 수업 - 점근적 표기 1](https://www.acmicpc.net/problem/24313)

풀이 접근 방법:
- 문제를 이해하고, 일단 구현해보자, c가 g의 개수로 보고, a0이 f에 개수이니깐 이거 두개를 비교해서 진행, n0보다 큰 n을 대상으로 조건 확인하기 떄문에
- n0이 크다면 한번만 확인하면 된다. 한 번만 봐도 되는가? a0이 더 높으면, n이 커질 수록 안된다. 그러므로 무조건 거짓이다.
- a0,a1이 절대값이 0<=, <=100이므로 2번 체크해야할 것으로 보인다.
- 음일 떄는 -1n+5 2 너무 시간이 걸려서 gpt를 보았다.

느낀점:
- 문제를 똑바로 이해하는게 중요하다는 점을 꺠달았다. 절대값인 것을 무시하고 푸니 굉장히 힙겹게 돌아갔다.
- 수학적 사고력도 부족함을 느꼈다.
"""
# 입력: f(n) = a1 * n + a0 / g(n) = c * n
a1, a0 = map(int, input().split())  # f(n) = a1 * n + a0
c = int(input())                    # g(n) = c * n
n0 = int(input())                  # n >= n0부터 f(n) <= c * g(n)이어야 함

# ---------------------------------------------
# ✅ 아이디어:
# 우리가 알고 싶은 건:
#   f(n) <= c * g(n)  for all n >= n0
# 즉,
#   a1 * n + a0 <= c * n
# → (a1 - c) * n + a0 <= 0  이 성립해야 함
#
# 이 부등식이 n >= n0에서 항상 성립하려면,
#   1. c >= a1 이어야 함 (n이 커질수록 (a1 - c)n이 감소하거나 일정해야 하니까)
#   2. 실제로 n = n0일 때도 부등식이 성립해야 함
#      (모든 n >= n0 이니까 n0 포함됨)
#
# 그래서 아래 조건을 둘 다 확인한다:
#   - c >= a1
#   - a1 * n0 + a0 <= c * n0
# ---------------------------------------------

# f(n0) 계산
lhs = a1 * n0 + a0  # f(n0)
rhs = c * n0        # c * n0 = g(n0) * c

# 두 조건을 만족하면 Big-O 관계 성립
if lhs <= rhs and c >= a1:
    print(1)
else:
    print(0)
